@startuml

class Main {
  +main(String[] args)
  +operation(int n, ArrayList<ArrayList<String>> inputInfo)
  +adventurerAdd(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +bottleAdd(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +bottleDelete(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +equipmentAdd(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +equipmentDelete(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +equipmentUpgrade(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +foodAdd(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +foodDelete(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +equipmentCarry(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +bottleCarry(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +foodCarry(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +bottleUse(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
  +foodUse(HashMap<Integer, Adventurer> adventurersMap, ArrayList<String> strings)
}

class Adventurer {
  -id: int
  -name: String
  -hitPoint: int
  -level: int
  -bottlesMap: HashMap<Integer, Bottle>
  -equipmentsMap: HashMap<Integer, Equipment>
  -foodMap: HashMap<Integer, Food>
  -backpack: Backpack
  +Adventurer(int id, String name)
  +getHitPoint(): int
  +getLevel(): int
  +increaseHitPoint(int bottleCapacity)
  +increaseLevel(int foodEnergy)
  +getMaxBottles(): int
  +addBottle(Bottle bottle)
  +deleteBottle(int bottleId)
  +getBottleCount(): int
  +getBottleName(int bottleId): String
  +addEquipment(Equipment equipment)
  +deleteEquipment(int equipmentId)
  +upgradeEquipment(int equipmentId)
  +getEquipmentCount(): int
  +getEquipmentName(int equipmentId): String
  +getEquipmentStar(int equipmentId): int
  +addFood(Food food)
  +getFoodName(int foodId): String
  +getFoodCount(): int
  +deleteFood(int foodId)
  +hasFood(int foodId): boolean
  +carryBottle(int bottleId)
  +carryEquipment(int equipmentId)
  +carryFood(int foodId)
  +hasBottle(String bottleName): boolean
  +getBottleId(String bottleName): int
  +useBottle(String bottleName): int
  +hasFood(String foodName): boolean
  +getFoodId(String foodName): int
  +useFood(String foodName): int
}

class Backpack {
  -bottleTreeMap: TreeMap<Integer, Bottle>
  -equipmentTreeMap: TreeMap<Integer, Equipment>
  -foodTreeMap: TreeMap<Integer, Food>
  +carryEquipment(Equipment equipment)
  +carryBottle(Bottle bottle)
  +carryFood(Food food)
  +getBottleNum(): int
  +hasBottle(String bottleName): boolean
  +getBottleId(String bottleName): int
  +useBottle(String bottleName): int
  +hasFood(String foodName): boolean
  +getFoodId(String foodName): int
  +useFood(String foodName): int
}

class Bottle {
  -id: int
  -name: String
  -capacity: int
  +Bottle(int id, String name, int capacity)
  +getName(): String
  +getId(): int
  +getCapacity(): int
  +resetCapacity()
}

class Equipment {
  -id: int
  -name: String
  -star: int
  +Equipment(int id, String name, int star)
  +getName(): String
  +getId(): int
  +getStar(): int
  +upgrade()
}

class Food {
  -id: int
  -name: String
  -energy: int
  +Food(int id, String name, int energy)
  +getName(): String
  +getId(): int
  +getEnergy(): int
}

Backpack --> Bottle
Backpack --> Equipment
Backpack --> Food
Backpack --> TreeMap
Bottle --> TreeMap
Equipment --> TreeMap
Food --> TreeMap


Adventurer --> Backpack
Main --> Adventurer
Adventurer --> Bottle
Adventurer --> Equipment
Adventurer --> Food
Main --> HashMap
ArrayList --> ArrayList

@enduml